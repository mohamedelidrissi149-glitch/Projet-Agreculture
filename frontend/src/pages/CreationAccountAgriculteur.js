import React, { useState } from 'react';
import './CreationAccountAgriculteur.css';
import Navbar from '../components/Navbar_Admin';

const CreationAccountAgriculteur = () => {
  const [formData, setFormData] = useState({
    nom: '',
    prenom: '',
    email: '',
    ville: '',
    pays: '',
    codePostal: '',
    password: '', 
    confirmPassword: '',
    dateNaissance: '',
    genre: '',
    telephone: '',
    tailleExploitation: '',
    canalCommunication: '',
    languePreferee: 'francais',
    consentementRGPD: false
  });
     
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  // Liste compl√®te des pays du monde
  const paysDuMonde = [
    'Afghanistan', 'Afrique du Sud', 'Albanie', 'Alg√©rie', 'Allemagne', 'Andorre', 'Angola', 'Antigua-et-Barbuda',
    'Arabie saoudite', 'Argentine', 'Arm√©nie', 'Australie', 'Autriche', 'Azerba√Ødjan', 'Bahamas', 'Bahre√Øn',
    'Bangladesh', 'Barbade', 'Belgique', 'Belize', 'B√©nin', 'Bhoutan', 'Bi√©lorussie', 'Birmanie', 'Bolivie',
    'Bosnie-Herz√©govine', 'Botswana', 'Br√©sil', 'Brunei', 'Bulgarie', 'Burkina Faso', 'Burundi', 'Cambodge',
    'Cameroun', 'Canada', 'Cap-Vert', 'Centrafrique', 'Chili', 'Chine', 'Chypre', 'Colombie', 'Comores',
    'Congo', 'Congo d√©mocratique', 'Cor√©e du Nord', 'Cor√©e du Sud', 'Costa Rica', 'C√¥te d\'Ivoire', 'Croatie',
    'Cuba', 'Danemark', 'Djibouti', 'Dominique', '√âgypte', '√âmirats arabes unis', '√âquateur', '√ârythr√©e',
    'Espagne', 'Estonie', '√âtats-Unis', '√âthiopie', 'Fidji', 'Finlande', 'France', 'Gabon', 'Gambie', 'G√©orgie',
    'Ghana', 'Gr√®ce', 'Grenade', 'Guatemala', 'Guin√©e', 'Guin√©e-Bissau', 'Guin√©e √©quatoriale', 'Guyana',
    'Ha√Øti', 'Honduras', 'Hongrie', '√éles Cook', '√éles Marshall', '√éles Salomon', 'Inde', 'Indon√©sie', 'Irak',
    'Iran', 'Irlande', 'Islande', 'Isra√´l', 'Italie', 'Jama√Øque', 'Japon', 'Jordanie', 'Kazakhstan', 'Kenya',
    'Kirghizistan', 'Kiribati', 'Kosovo', 'Kowe√Øt', 'Laos', 'Lesotho', 'Lettonie', 'Liban', 'Liberia', 'Libye',
    'Liechtenstein', 'Lituanie', 'Luxembourg', 'Mac√©doine du Nord', 'Madagascar', 'Malaisie', 'Malawi',
    'Maldives', 'Mali', 'Malte', 'Maroc', 'Maurice', 'Mauritanie', 'Mexique', 'Micron√©sie', 'Moldavie',
    'Monaco', 'Mongolie', 'Mont√©n√©gro', 'Mozambique', 'Namibie', 'Nauru', 'N√©pal', 'Nicaragua', 'Niger',
    'Nigeria', 'Niue', 'Norv√®ge', 'Nouvelle-Z√©lande', 'Oman', 'Ouganda', 'Ouzb√©kistan', 'Pakistan', 'Palaos',
    'Palestine', 'Panama', 'Papouasie-Nouvelle-Guin√©e', 'Paraguay', 'Pays-Bas', 'P√©rou', 'Philippines', 'Pologne',
    'Portugal', 'Qatar', 'R√©publique dominicaine', 'R√©publique tch√®que', 'Roumanie', 'Royaume-Uni', 'Russie',
    'Rwanda', 'Saint-Kitts-et-Nevis', 'Saint-Vincent-et-les-Grenadines', 'Sainte-Lucie', 'Saint-Marin',
    'Samoa', 'S√£o Tom√©-et-Principe', 'S√©n√©gal', 'Serbie', 'Seychelles', 'Sierra Leone', 'Singapour', 'Slovaquie',
    'Slov√©nie', 'Somalie', 'Soudan', 'Soudan du Sud', 'Sri Lanka', 'Su√®de', 'Suisse', 'Suriname', 'Syrie',
    'Tadjikistan', 'Tanzanie', 'Tchad', 'Tha√Ølande', 'Timor oriental', 'Togo', 'Tonga', 'Trinit√©-et-Tobago',
    'Tunisie', 'Turkm√©nistan', 'Turquie', 'Tuvalu', 'Ukraine', 'Uruguay', 'Vanuatu', 'Vatican', 'Venezuela',
    'Vi√™t Nam', 'Y√©men', 'Zambie', 'Zimbabwe'
  ];

  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value
    }));
  };

  const validateForm = () => {
    if (formData.password !== formData.confirmPassword) {
      setError('Les mots de passe ne correspondent pas');
      return false;
    }
    if (formData.password.length < 6) {
      setError('Le mot de passe doit contenir au moins 6 caract√®res');
      return false;
    }
    
    if (!formData.dateNaissance) {
      setError('La date de naissance est requise');
      return false;
    }
    if (!formData.genre) {
      setError('Le genre est requis');
      return false;
    }
    if (!formData.telephone) {
      setError('Le num√©ro de t√©l√©phone est requis');
      return false;
    }
    if (!formData.tailleExploitation) {
      setError('La taille de l\'exploitation est requise');
      return false;
    }
    if (!formData.canalCommunication) {
      setError('Le canal de communication pr√©f√©r√© est requis');
      return false;
    }
    if (!formData.consentementRGPD) {
      setError('Vous devez accepter les conditions g√©n√©rales et la politique de confidentialit√©');
      return false;
    }
    
    return true;
  };
  
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError(''); 
    setSuccess('');
  
    if (!validateForm()) return;

    setIsLoading(true);

    try {
      const response = await fetch('http://127.0.0.1:5000/api/admin/create-agriculteur', {
        method: 'POST',
        headers: { 
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${localStorage.getItem('authToken')}`
        },
        body: JSON.stringify(formData)
      }); 

      const data = await response.json();

      if (!response.ok) {
        setError(data.message || 'Erreur serveur');
      } else {
        setSuccess('Compte agriculteur cr√©√© avec succ√®s !');
        // Reset form
        setFormData({
          nom: '',
          prenom: '',
          email: '',
          ville: '',
          pays: '',
          codePostal: '',
          password: '', 
          confirmPassword: '',
          dateNaissance: '',
          genre: '',
          telephone: '',
          tailleExploitation: '',
          canalCommunication: '',
          languePreferee: 'francais',
          consentementRGPD: false
        });
      }
    } catch (err) {
      setError('Impossible de contacter le serveur');
      console.error(err);
    } finally {
      setIsLoading(false);
    } 
  };
  
  return (
    <div className="admin-page">
      <Navbar />
      
      <div className="creation-page">
        {/* Animation de fond */}
        <div className="bg-animation">
          <div className="leaf">üå±</div>
          <div className="leaf">üåø</div>
          <div className="leaf">üå±</div>
          <div className="leaf">üåø</div>
          <div className="leaf">üå±</div>
        </div>

        <div className="creation-container">
          {/* Section Header Admin */}
          <div className="admin-header">
            <div className="admin-icon">üë®‚Äçüíº</div>
            <h1 className="admin-title">Panneau Administrateur</h1>
            <p className="admin-subtitle">Cr√©er un compte agriculteur</p>
          </div>

          {/* Messages d'erreur et de succ√®s */}
          {error && (
            <div className="alert alert-error">
              {error} 
            </div>
          )} 
          
          {success && ( 
            <div className="alert alert-success">
              {success} 
            </div>
          )} 

          {/* Formulaire professionnel */}
          <form onSubmit={handleSubmit} className="admin-form">
            
            {/* ========== SECTION INFORMATIONS PERSONNELLES ========== */}
            <div className="form-section">
              <h3 className="section-title">üìã Informations personnelles</h3>
              
              {/* Ligne 1: Nom et Pr√©nom */}
              <div className="form-row">
                <div className="form-group">
                  <label>Nom *</label>
                  <input 
                    type="text" 
                    name="nom" 
                    value={formData.nom} 
                    onChange={handleChange} 
                    placeholder="Nom" 
                    required 
                  />
                </div>
                <div className="form-group">
                  <label>Pr√©nom *</label>
                  <input 
                    type="text" 
                    name="prenom" 
                    value={formData.prenom} 
                    onChange={handleChange} 
                    placeholder="Pr√©nom" 
                    required  
                  /> 
                </div> 
              </div>
    
              {/* Ligne 2: Email et Date de naissance */}
              <div className="form-row">
                <div className="form-group">
                  <label>Email *</label>
                  <input 
                    type="email" 
                    name="email" 
                    value={formData.email}  
                    onChange={handleChange} 
                    placeholder="exemple@email.com" 
                    required  
                  />
                </div>
                <div className="form-group">
                  <label>Date de naissance *</label>
                  <input 
                    type="date" 
                    name="dateNaissance" 
                    value={formData.dateNaissance} 
                    onChange={handleChange} 
                    required 
                  />
                </div>
              </div>

              {/* Ligne 3: Genre et T√©l√©phone */}
              <div className="form-row">
                <div className="form-group">
                  <label>Genre *</label>
                  <select 
                    name="genre" 
                    value={formData.genre} 
                    onChange={handleChange} 
                    required
                  >
                    <option value="">-- S√©lectionnez --</option>
                    <option value="homme">Homme</option>
                    <option value="femme">Femme</option>
                    <option value="autre">Autre</option>
                  </select>
                </div>
                <div className="form-group">
                  <label>T√©l√©phone *</label>
                  <input 
                    type="tel" 
                    name="telephone" 
                    value={formData.telephone} 
                    onChange={handleChange} 
                    placeholder="+33 6 12 34 56 78" 
                    required 
                  />
                </div>
              </div>
            </div>

            {/* ========== SECTION LOCALISATION ========== */}
            <div className="form-section">
              <h3 className="section-title">üìç Localisation</h3>
              
              {/* Ligne 1: Pays et Ville */}
              <div className="form-row">
                <div className="form-group">
                  <label>Pays *</label>
                  <select 
                    name="pays" 
                    value={formData.pays} 
                    onChange={handleChange} 
                    required
                  >
                    <option value="">-- Choisir un pays --</option>
                    {paysDuMonde.map(pays => (
                      <option key={pays} value={pays}>{pays}</option>
                    ))}
                  </select>
                </div>
                <div className="form-group">
                  <label>Ville *</label>
                  <input 
                    type="text" 
                    name="ville" 
                    value={formData.ville} 
                    onChange={handleChange} 
                    placeholder="Nom de la ville" 
                    required 
                  />
                </div>
              </div>

              {/* Ligne 2: Code postal et Langue */}
              <div className="form-row">
                <div className="form-group">
                  <label>Code postal *</label>
                  <input 
                    type="text" 
                    name="codePostal" 
                    value={formData.codePostal} 
                    onChange={handleChange} 
                    placeholder="12345" 
                    required 
                  />
                </div>
                <div className="form-group">
                  <label>Langue pr√©f√©r√©e *</label>
                  <select 
                    name="languePreferee" 
                    value={formData.languePreferee} 
                    onChange={handleChange} 
                    required
                  >
                    <option value="francais">Fran√ßais</option>
                    <option value="arabe">ÿßŸÑÿπÿ±ÿ®Ÿäÿ©</option>
                    <option value="anglais">English</option>
                    <option value="amazigh">Amazigh</option>
                    <option value="espagnol">Espa√±ol</option>
                    <option value="portugais">Portugu√™s</option>
                  </select>
                </div>
              </div>
            </div>

            {/* ========== SECTION EXPLOITATION AGRICOLE ========== */}
            <div className="form-section">
              <h3 className="section-title">üöú Exploitation agricole</h3>
              
              {/* Ligne 1: Taille exploitation et Canal communication */}
              <div className="form-row">
                <div className="form-group">
                  <label>Taille de l'exploitation *</label>
                  <select 
                    name="tailleExploitation" 
                    value={formData.tailleExploitation} 
                    onChange={handleChange} 
                    required
                  >
                    <option value="">-- S√©lectionnez --</option>
                    <option value="moins-1ha">Moins de 1 hectare</option>
                    <option value="1-5ha">1 √† 5 hectares</option>
                    <option value="5-10ha">5 √† 10 hectares</option>
                    <option value="10-20ha">10 √† 20 hectares</option>
                    <option value="20-50ha">20 √† 50 hectares</option>
                    <option value="50-100ha">50 √† 100 hectares</option>
                    <option value="plus-100ha">Plus de 100 hectares</option>
                  </select>
                </div>
                <div className="form-group">
                  <label>Canal de communication pr√©f√©r√© *</label>
                  <select 
                    name="canalCommunication" 
                    value={formData.canalCommunication} 
                    onChange={handleChange} 
                    required
                  >
                    <option value="">-- S√©lectionnez --</option>
                    <option value="email">Email</option>
                    <option value="sms">SMS</option>
                    <option value="whatsapp">WhatsApp</option>
                    <option value="app-mobile">Application mobile</option>
                    <option value="telephone">T√©l√©phone</option>
                  </select>
                </div>
              </div>
            </div>

            {/* ========== SECTION S√âCURIT√â ========== */}
            <div className="form-section">
              <h3 className="section-title">üîê S√©curit√© du compte</h3>
              
              {/* Ligne 1: Mots de passe */}
              <div className="form-row">
                <div className="form-group">
                  <label>Mot de passe *</label>
                  <div className="input-wrapper">
                    <input 
                      type={showPassword ? 'text' : 'password'} 
                      name="password" 
                      value={formData.password} 
                      onChange={handleChange} 
                      placeholder="Minimum 6 caract√®res" 
                      required 
                    />
                    <span 
                      className="password-toggle" 
                      onClick={() => setShowPassword(!showPassword)}
                    >
                      {showPassword ? 'üôà' : 'üëÅÔ∏è'}
                    </span>
                  </div>
                </div>
                <div className="form-group">
                  <label>Confirmer le mot de passe *</label>
                  <div className="input-wrapper">
                    <input 
                      type={showConfirmPassword ? 'text' : 'password'} 
                      name="confirmPassword" 
                      value={formData.confirmPassword} 
                      onChange={handleChange} 
                      placeholder="R√©p√©ter le mot de passe" 
                      required 
                    />
                    <span 
                      className="password-toggle" 
                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}
                    >
                      {showConfirmPassword ? 'üôà' : 'üëÅÔ∏è'}
                    </span>
                  </div>
                </div>
              </div>
            </div>

            {/* ========== SECTION CONSENTEMENT RGPD ========== */}
            <div className="form-section">
              <div className="checkbox-group">
                <input 
                  type="checkbox" 
                  id="consentementRGPD" 
                  name="consentementRGPD" 
                  checked={formData.consentementRGPD} 
                  onChange={handleChange} 
                  required 
                />
                <label htmlFor="consentementRGPD" className="checkbox-label">
                  J'accepte les conditions g√©n√©rales d'utilisation et la politique de confidentialit√© *
                </label>
              </div>
            </div>

            {/* Bouton de cr√©ation */}
            <button 
              type="submit" 
              className="admin-create-btn"
              disabled={isLoading}
            >
              {isLoading && <div className="loading"></div>}
              <span className="btn-text">
                {isLoading ? 'Cr√©ation en cours...' : "Cr√©er le compte agriculteur"}
              </span>
            </button>
          </form>

          {/* Features administrateur */}
          <div className="admin-features"> 
            <div className="feature-item">üë®‚Äçüíº Gestion centralis√©e</div>
            <div className="feature-item">üìä Suivi des comptes</div>
            <div className="feature-item">üîí S√©curit√© renforc√©e</div>
            <div className="feature-item">üìß Notifications automatiques</div>
          </div>
        </div>
      </div>
    </div> 
  );
}; 
   
export default CreationAccountAgriculteur;        